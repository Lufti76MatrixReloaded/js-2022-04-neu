{"ast":null,"code":"var _jsxFileName = \"/Users/andreluft/WebstormProjects/js-2022-04-neu/react3b/src/Components/Calculator.js\";\nimport React from 'react';\nimport TemperatureInput from \"./TemperatureInput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Calculator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleCelsiusChange = this.handleCelsiusChange.bind(this);\n    this.handleFahrenheitChange = this.handleFahrenheitChange.bind(this);\n    this.state = {\n      temperature: '100',\n      scale: 'c'\n    };\n  }\n\n  handleCelsiusChange(temperature) {\n    /* ToDO: Setze hier den State neu */\n    this.setState({\n      scale: 'c',\n      temperature\n    });\n  }\n\n  handleFahrenheitChange(temperature) {\n    /* ToDO: Setze hier den State neu */\n    this.setState({\n      scale: 'f',\n      temperature\n    });\n  }\n\n  render() {\n    /* ToDO: Verwende hier das Attribut scale aus dem State anstatt des festen Werts '0'*/\n    const scale = this.state.scale;\n    /* ToDO: Verwende hier das Attribut temperature aus dem State anstatt des festen Werts 0*/\n\n    const temperature = this.state.temperature;\n    let celsius,\n        fahrenheit = temperature;\n    /* ToDO: Ersetze hier 'true' durch die in der Aufgabe beschriebene Bedingung*/\n\n    if (true) {\n      celsius = tryConvert(temperature, toCelsius);\n    } else {\n      fahrenheit = tryConvert(temperature, toFahrenheit);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(TemperatureInput, {\n        scale: \"celsius\",\n        temperature: celsius,\n        onTemperatureChange: this.handleCelsiusChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TemperatureInput, {\n        scale: \"fahrenheit\",\n        temperature: fahrenheit,\n        onTemperatureChange: this.handleFahrenheitChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nfunction toCelsius(fahrenheit) {\n  return (fahrenheit - 32) * 5 / 9;\n}\n\nfunction toFahrenheit(celsius) {\n  return celsius * 9 / 5 + 32;\n}\n\nfunction tryConvert(temperature, convert) {\n  const input = parseFloat(temperature);\n\n  if (Number.isNaN(input)) {\n    return '';\n  }\n\n  const output = convert(input);\n  const rounded = Math.round(output * 1000) / 1000;\n  return rounded.toString();\n}\n\nexport default Calculator;","map":{"version":3,"names":["React","TemperatureInput","Calculator","Component","constructor","props","handleCelsiusChange","bind","handleFahrenheitChange","state","temperature","scale","setState","render","celsius","fahrenheit","tryConvert","toCelsius","toFahrenheit","convert","input","parseFloat","Number","isNaN","output","rounded","Math","round","toString"],"sources":["/Users/andreluft/WebstormProjects/js-2022-04-neu/react3b/src/Components/Calculator.js"],"sourcesContent":["import React from 'react';\nimport TemperatureInput from \"./TemperatureInput\";\n\nclass Calculator extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleCelsiusChange = this.handleCelsiusChange.bind(this)\n        this.handleFahrenheitChange = this.handleFahrenheitChange.bind(this)\n        this.state = {temperature: '100', scale: 'c'}\n    }\n\n    handleCelsiusChange(temperature) {\n        /* ToDO: Setze hier den State neu */\n        this.setState({scale: 'c', temperature});\n    }\n\n    handleFahrenheitChange(temperature) {\n        /* ToDO: Setze hier den State neu */\n        this.setState({scale: 'f', temperature});\n    }\n\n    render() {\n        /* ToDO: Verwende hier das Attribut scale aus dem State anstatt des festen Werts '0'*/\n        const scale = this.state.scale;\n        /* ToDO: Verwende hier das Attribut temperature aus dem State anstatt des festen Werts 0*/\n        const temperature = this.state.temperature;\n        let celsius, fahrenheit = temperature\n\n        /* ToDO: Ersetze hier 'true' durch die in der Aufgabe beschriebene Bedingung*/\n        if(true){\n            celsius = tryConvert(temperature, toCelsius)\n        }else{\n            fahrenheit = tryConvert(temperature, toFahrenheit)\n        }\n\n        return (\n            <div>\n                <TemperatureInput\n                    scale=\"celsius\"\n                    temperature={celsius}\n                    onTemperatureChange={this.handleCelsiusChange} />\n                <TemperatureInput\n                    scale=\"fahrenheit\"\n                    temperature={fahrenheit}\n                    onTemperatureChange={this.handleFahrenheitChange} />\n            </div>\n        );\n    }\n}\n\nfunction toCelsius(fahrenheit) {\n    return (fahrenheit - 32) * 5 / 9;\n}\n\nfunction toFahrenheit(celsius) {\n    return (celsius * 9 / 5) + 32;\n}\n\nfunction tryConvert(temperature, convert) {\n    const input = parseFloat(temperature);\n    if (Number.isNaN(input)) {\n        return '';\n    }\n    const output = convert(input);\n    const rounded = Math.round(output * 1000) / 1000;\n    return rounded.toString();\n}\n\nexport default Calculator"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;;;AAEA,MAAMC,UAAN,SAAyBF,KAAK,CAACG,SAA/B,CAAyC;EACrCC,WAAW,CAACC,KAAD,EAAQ;IACf,MAAMA,KAAN;IACA,KAAKC,mBAAL,GAA2B,KAAKA,mBAAL,CAAyBC,IAAzB,CAA8B,IAA9B,CAA3B;IACA,KAAKC,sBAAL,GAA8B,KAAKA,sBAAL,CAA4BD,IAA5B,CAAiC,IAAjC,CAA9B;IACA,KAAKE,KAAL,GAAa;MAACC,WAAW,EAAE,KAAd;MAAqBC,KAAK,EAAE;IAA5B,CAAb;EACH;;EAEDL,mBAAmB,CAACI,WAAD,EAAc;IAC7B;IACA,KAAKE,QAAL,CAAc;MAACD,KAAK,EAAE,GAAR;MAAaD;IAAb,CAAd;EACH;;EAEDF,sBAAsB,CAACE,WAAD,EAAc;IAChC;IACA,KAAKE,QAAL,CAAc;MAACD,KAAK,EAAE,GAAR;MAAaD;IAAb,CAAd;EACH;;EAEDG,MAAM,GAAG;IACL;IACA,MAAMF,KAAK,GAAG,KAAKF,KAAL,CAAWE,KAAzB;IACA;;IACA,MAAMD,WAAW,GAAG,KAAKD,KAAL,CAAWC,WAA/B;IACA,IAAII,OAAJ;IAAA,IAAaC,UAAU,GAAGL,WAA1B;IAEA;;IACA,IAAG,IAAH,EAAQ;MACJI,OAAO,GAAGE,UAAU,CAACN,WAAD,EAAcO,SAAd,CAApB;IACH,CAFD,MAEK;MACDF,UAAU,GAAGC,UAAU,CAACN,WAAD,EAAcQ,YAAd,CAAvB;IACH;;IAED,oBACI;MAAA,wBACI,QAAC,gBAAD;QACI,KAAK,EAAC,SADV;QAEI,WAAW,EAAEJ,OAFjB;QAGI,mBAAmB,EAAE,KAAKR;MAH9B;QAAA;QAAA;QAAA;MAAA,QADJ,eAKI,QAAC,gBAAD;QACI,KAAK,EAAC,YADV;QAEI,WAAW,EAAES,UAFjB;QAGI,mBAAmB,EAAE,KAAKP;MAH9B;QAAA;QAAA;QAAA;MAAA,QALJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ;EAYH;;AA5CoC;;AA+CzC,SAASS,SAAT,CAAmBF,UAAnB,EAA+B;EAC3B,OAAO,CAACA,UAAU,GAAG,EAAd,IAAoB,CAApB,GAAwB,CAA/B;AACH;;AAED,SAASG,YAAT,CAAsBJ,OAAtB,EAA+B;EAC3B,OAAQA,OAAO,GAAG,CAAV,GAAc,CAAf,GAAoB,EAA3B;AACH;;AAED,SAASE,UAAT,CAAoBN,WAApB,EAAiCS,OAAjC,EAA0C;EACtC,MAAMC,KAAK,GAAGC,UAAU,CAACX,WAAD,CAAxB;;EACA,IAAIY,MAAM,CAACC,KAAP,CAAaH,KAAb,CAAJ,EAAyB;IACrB,OAAO,EAAP;EACH;;EACD,MAAMI,MAAM,GAAGL,OAAO,CAACC,KAAD,CAAtB;EACA,MAAMK,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWH,MAAM,GAAG,IAApB,IAA4B,IAA5C;EACA,OAAOC,OAAO,CAACG,QAAR,EAAP;AACH;;AAED,eAAe1B,UAAf"},"metadata":{},"sourceType":"module"}