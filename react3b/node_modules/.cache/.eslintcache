[{"/Users/andreluft/WebstormProjects/js-2022-04-neu/react3b/src/index.js":"1","/Users/andreluft/WebstormProjects/js-2022-04-neu/react3b/src/App.js":"2","/Users/andreluft/WebstormProjects/js-2022-04-neu/react3b/src/Components/Calculator.js":"3","/Users/andreluft/WebstormProjects/js-2022-04-neu/react3b/src/Components/TemperatureInput.js":"4"},{"size":233,"mtime":1653381696941,"results":"5","hashOfConfig":"6"},{"size":155,"mtime":1653381696941,"results":"7","hashOfConfig":"6"},{"size":1340,"mtime":1653409445222,"results":"8","hashOfConfig":"6"},{"size":671,"mtime":1653401074566,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"kjqyvu",{"filePath":"13","messages":"14","suppressedMessages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},"/Users/andreluft/WebstormProjects/js-2022-04-neu/react3b/src/index.js",[],[],"/Users/andreluft/WebstormProjects/js-2022-04-neu/react3b/src/App.js",[],[],"/Users/andreluft/WebstormProjects/js-2022-04-neu/react3b/src/Components/Calculator.js",["24"],[],"/Users/andreluft/WebstormProjects/js-2022-04-neu/react3b/src/Components/TemperatureInput.js",["25"],[],"import React from 'react';\nimport { render } from \"react-dom\";\n\nclass TemperatureInput extends React.Component {\n\tconstructor( props ) {\n\t\tsuper( props );\n\t\tthis.handleChange = this.handleChange.bind( this );\n\t\tthis.state = { temperature : '' };\n\t}\n\t\n\thandleChange( e ) {\n\t\tthis.props.onTemperatureChange( e.target.value );\n\t}\n}\n\nrender()\n{\n\tconst temperature = this.props.temperature;\n\tconst scale = this.props.scale;\n\treturn (\n\t\t<fieldset>\n\t\t\t<legend>Enter temperature in { scaleNames[ scale ] }:</legend>\n\t\t\t<input value={ temperature }\n\t\t\t       onChange={ this.handleChange }/>\n\t\t</fieldset>\n\t);\n}\n}\n/* ToDO: Verwende hier die props, um den beiden Konstanten einen von den props abh√§ngenden\n\tWert zu geben */\nconst temperature = 0\nconst scale = ''\nreturn (\n\t<fieldset>\n\t\t<legend>Enter temperature in { scale }:</legend>\n\t\t<input value={ temperature }\n\t\t       onChange={ this.handleChange }/>\n\t</fieldset>\n);\n}\n}\n\nexport default TemperatureInput",[],{"ruleId":null,"fatal":true,"severity":2,"message":"26","line":45,"column":0},{"ruleId":null,"fatal":true,"severity":2,"message":"27","line":20,"column":1},"Parsing error: Unexpected token (45:0)","Parsing error: 'return' outside of function. (20:1)"]